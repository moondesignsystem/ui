@use "sass:map";
@use "variables";
@use "variants";

@function generate-size($size) {
  @return (
    "height": var(--scale-#{$size}-height),
    "padding": var(--scale-#{$size}-padding),
    "gap": var(--scale-#{$size}-gap),
    "radius": var(--utility-select-radius-#{$size}),
    "font": var(--scale-#{$size}-text-weight) var(--scale-#{$size}-text-size) / var(--scale-#{$size}-text-height)
      var(--scale-#{$size}-text-font),
    "icon-size": var(--scale-#{$size}-icon-size)
  );
}
$sizes: ();
@each $size in variants.$select-sizes {
  $sizes: map.set($sizes, $size, generate-size($size));
}

.moon-select {
  display: flex;
  width: 100%;
  appearance: none;
  outline: none;
  border-color: transparent;
  align-items: center;
  transition:
    box-shadow 150ms ease-in-out,
    opacity 150ms ease-in-out,
    background-color 150ms ease-in-out;
  min-height: map.get($sizes, "md", "height");
  padding: 0 map.get($sizes, "md", "padding");
  gap: map.get($sizes, "md", "gap");
  border-radius: map.get($sizes, "md", "radius");
  font: map.get($sizes, "md", "font");
  box-shadow: inset 0 0 0 var(--select-stroke-default) var(--select-border);
  color: var(--semantic-text-primary);
  background-color: var(--select-background);

  &:disabled {
    cursor: not-allowed;
    opacity: var(--effect-opacity-disabled);
  }

  &:not(:disabled):hover {
    box-shadow: inset 0 0 0 var(--spacing-space-2) var(--semantic-border-primary);
    background-color: var(--semantic-background-hover);
  }

  &:not(:disabled):focus {
    box-shadow: inset 0 0 0 var(--spacing-space-2) var(--semantic-border-active);
  }

  @each $size, $prop in $sizes {
    @if $size != "md" {
      &.moon-select-#{$size} {
        min-height: map.get($prop, "height");
        padding: 0 map.get($prop, "padding");
        column-gap: map.get($prop, "gap");
        border-radius: map.get($prop, "radius");
        font: map.get($prop, "font");
      }
    }
  }

  &.moon-select-error {
    box-shadow: inset 0 0 0 var(--spacing-space-2) var(--semantic-border-negative);

    &:hover,
    &:focus {
      box-shadow: inset 0 0 0 var(--spacing-space-2) var(--semantic-border-negative);
    }
  }
}
