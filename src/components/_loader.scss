@use "sass:map";
@use "variants";

@function generate-size($size) {
  @return ("width": var(--scale-#{$size}-width), "height": var(--scale-#{$size}-height));
}
$sizes: ();
@each $size in variants.$loader-sizes {
  $sizes: map.set($sizes, $size, generate-size($size));
}

$border: var(--dimension-border-2);

.moon-loader {
  position: relative;
  width: map.get($sizes, "md", "width");
  height: map.get($sizes, "md", "height");
  border-radius: 50%;
  animation: rotate 1s linear infinite;
  box-shadow: inset 0 0 0 $border var(--loader-track);

  &::after {
    content: "";
    box-sizing: border-box;
    position: absolute;
    inset: 0;
    border-radius: 50%;
    border: $border solid var(--loader-progress);
    animation: prix-clip-fix 2s ease-in-out infinite;
  }

  @each $size, $prop in $sizes {
    @if $size != "md" {
      &.moon-loader-#{$size} {
        width: map.get($prop, "width");
        height: map.get($prop, "height");
      }
    }
  }
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes prix-clip-fix {
  0% {
    clip-path: polygon(50% 50%, 0 0, 0 0, 0 0, 0 0, 0 0);
  }

  25% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 0, 100% 0, 100% 0);
  }

  50% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 100% 100%, 100% 100%);
  }

  75% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 100%);
  }

  100% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 0);
  }
}
