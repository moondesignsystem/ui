@use "sass:map";

$sizes: (
  xs: (
    height: var(--scale-xs-height),
    width: var(--scale-xs-width),
    radius: var(--utility-icon-button-radius-xs),
    icon-size: var(--scale-xs-icon-size)
  ),
  sm: (
    height: var(--scale-sm-height),
    width: var(--scale-sm-width),
    radius: var(--utility-icon-button-radius-sm),
    icon-size: var(--scale-sm-icon-size)
  ),
  md: (
    height: var(--scale-md-height),
    width: var(--scale-md-width),
    radius: var(--utility-icon-button-radius-md),
    icon-size: var(--scale-md-icon-size)
  ),
  lg: (
    height: var(--scale-lg-height),
    width: var(--scale-lg-width),
    radius: var(--utility-icon-button-radius-lg),
    icon-size: var(--scale-lg-icon-size)
  ),
  xl: (
    height: var(--scale-xl-height),
    width: var(--scale-xl-width),
    radius: var(--utility-icon-button-radius-xl),
    icon-size: var(--scale-xl-icon-size)
  )
);
$variants: (
  fill: (
    background-color: var(--icon-button-fill-background),
    icon-color: var(--icon-button-fill-icon),
    box-shadow: inset 0 0 0 var(--icon-button-fill-stroke) var(--icon-button-fill-border)
  ),
  soft: (
    background-color: var(--icon-button-soft-background),
    icon-color: var(--icon-button-soft-icon),
    box-shadow: inset 0 0 0 var(--icon-button-soft-stroke) var(--icon-button-soft-border)
  ),
  outline: (
    background-color: var(--icon-button-outline-background),
    icon-color: var(--icon-button-outline-icon),
    box-shadow: inset 0 0 0 var(--icon-button-outline-stroke) var(--icon-button-outline-border)
  ),
  ghost: (
    background-color: var(--icon-button-ghost-background),
    icon-color: var(--icon-button-ghost-icon),
    box-shadow: inset 0 0 0 var(--icon-button-ghost-stroke) var(--icon-button-ghost-border)
  )
);

.moon-icon-button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  overflow: hidden;
  transition:
    opacity 150ms ease-in-out,
    transform 150ms ease-in-out;
  height: map.get($sizes, "md", "height");
  width: map.get($sizes, "md", "width");
  background-color: map.get($variants, "fill", "background-color");
  border-radius: map.get($sizes, "md", "radius");

  :where(svg) {
    color: map.get($variants, "fill", "icon-color");
    width: map.get($sizes, "md", "icon-size");
    height: map.get($sizes, "md", "icon-size");
  }

  &::after {
    content: "";
    position: absolute;
    display: block;
    inset: 0;
    transition: background-color 150ms ease-in-out;
    pointer-events: none;
    background-color: var(--semantic-background-transparent);
  }

  &:disabled,
  &[aria-disabled="true"] {
    cursor: not-allowed;
    opacity: var(--effect-opacity-disabled);
  }

  &:active {
    transform: scale(0.95);
  }

  &:not(:disabled):not([aria-disabled="true"]):hover::after {
    background-color: var(--semantic-background-hover);
  }

  @each $size, $prop in $sizes {
    @if $size != "md" {
      &.moon-icon-button-#{$size} {
        height: map.get($prop, "height");
        width: map.get($prop, "width");
        border-radius: map.get($prop, "radius");

        :where(svg) {
          width: map.get($prop, "icon-size");
          height: map.get($prop, "icon-size");
        }
      }
    }
  }

  @each $variant, $prop in $variants {
    @if $variant != "fill" {
      &.moon-icon-button-#{$variant} {
        background-color: map.get($prop, "background-color");
        box-shadow: map.get($prop, "box-shadow");

        :where(svg) {
          color: map.get($prop, "icon-color");
        }
      }
    }
  }
}
