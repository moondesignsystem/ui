@use "sass:map";
@use "variables";

$sizes: (
  sm: (
    padding: var(--scale-sm-padding),
    radius: var(--utility-textarea-radius-sm),
    font: variables.$scale-sm-text
  ),
  md: (
    padding: var(--scale-md-padding),
    radius: var(--utility-textarea-radius-md),
    font: variables.$scale-md-text
  ),
  lg: (
    padding: var(--scale-lg-padding),
    radius: var(--utility-textarea-radius-lg),
    font: variables.$scale-lg-text
  ),
  xl: (
    padding: var(--scale-xl-padding),
    radius: var(--utility-textarea-radius-xl),
    font: variables.$scale-xl-text
  )
);

.moon-textarea {
  display: block;
  width: 100%;
  resize: none;
  outline: none;
  border-color: transparent;
  transition:
    box-shadow 150ms ease-in-out,
    opacity 150ms ease-in-out,
    background-color 150ms ease-in-out;
  padding: map.get($sizes, "md", "padding");
  border-radius: map.get($sizes, "md", "radius");
  font: map.get($sizes, "md", "font");
  box-shadow: inset 0 0 0 var(--textarea-stroke-default) var(--textarea-border);
  color: var(--semantic-text-primary);
  background-color: var(--textarea-background);

  &::placeholder {
    color: var(--semantic-text-secondary);
  }

  &:read-only,
  &:disabled {
    cursor: not-allowed;
  }

  &:disabled {
    opacity: var(--effect-opacity-disabled);
  }

  &:not(:read-only, :disabled):hover {
    box-shadow: inset 0 0 0 var(--spacing-space-2) var(--semantic-border-primary);
    background-color: var(--semantic-background-hover);
  }

  &:not(:read-only, :disabled):focus {
    box-shadow: inset 0 0 0 var(--spacing-space-2) var(--semantic-border-active);
  }

  &.moon-textarea-error {
    box-shadow: inset 0 0 0 var(--spacing-space-2) var(--semantic-border-negative);

    &:hover,
    &:focus {
      box-shadow: inset 0 0 0 var(--spacing-space-2) var(--semantic-border-negative);
    }
  }

  @each $size, $prop in $sizes {
    @if $size != "md" {
      &.moon-textarea-#{$size} {
        padding: map.get($prop, "padding");
        border-radius: map.get($prop, "radius");
        font: map.get($prop, "font");
      }
    }
  }
}
