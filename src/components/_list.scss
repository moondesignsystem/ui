@use "sass:map";
@use "variables";

@mixin list-sizes($size, $prop) {
  & > * {
    height: map.get($prop, "height");
    font: map.get($prop, "font");
    gap: map.get($prop, "gap");
    padding: map.get($prop, "padding");

    :where(svg) {
      width: map.get($prop, "icon-size");
      height: map.get($prop, "icon-size");
    }
  }
}

$sizes: (
  sm: (
    height: var(--scale-sm-height),
    font: variables.$scale-sm-text,
    gap: var(--scale-sm-gap),
    padding: var(--list-padding-sm),
    icon-size: var(--scale-sm-icon-size)
  ),
  md: (
    height: var(--scale-md-height),
    font: variables.$scale-md-text,
    gap: var(--scale-md-gap),
    padding: var(--list-padding-md),
    icon-size: var(--scale-md-icon-size)
  ),
  lg: (
    height: var(--scale-lg-height),
    font: variables.$scale-lg-text,
    gap: var(--scale-lg-gap),
    padding: var(--list-padding-lg),
    icon-size: var(--scale-lg-icon-size)
  ),
  xl: (
    height: var(--scale-xl-height),
    font: variables.$scale-xl-text,
    gap: var(--scale-xl-gap),
    padding: var(--list-padding-xl),
    icon-size: var(--scale-xl-icon-size)
  ),
  2xl: (
    height: var(--scale-2xl-height),
    font: variables.$scale-2xl-text,
    gap: var(--scale-2xl-gap),
    padding: var(--list-padding-2xl),
    icon-size: var(--scale-2xl-icon-size)
  )
);

.moon-list {
  display: flex;
  width: 100%;
  flex-direction: column;

  & > * {
    position: relative;
    display: grid;
    grid-template-columns: auto minmax(auto, 1fr);
    grid-auto-flow: column;
    justify-content: start;
    place-items: center start;
    gap: map.get($sizes, "md", "gap");
    padding: map.get($sizes, "md", "padding");
    height: map.get($sizes, "md", "height");
    font: map.get($sizes, "md", "font");
    color: var(--semantic-text-primary);

    &:not(:last-child)::after {
      content: "";
      position: absolute;
      bottom: 0;
      inset-inline: 0;
      height: var(--dimension-border-1);
      background-color: var(--semantic-border-secondary);
    }

    :where(svg) {
      width: map.get($sizes, "md", "icon-size");
      height: map.get($sizes, "md", "icon-size");
      color: var(--semantic-icon-primary);
    }

    :where(:last-child) {
      justify-self: end;
    }
  }

  @each $size, $prop in $sizes {
    @if $size != "md" {
      &.moon-list-#{$size} {
        @include list-sizes($size, $prop);
      }
    }
  }
}
