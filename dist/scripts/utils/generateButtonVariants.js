import fs from "fs";
import path from "path";
/**
 * Automatically detects button variants from CSS variables and generates Sass list
 */
const generateButtonVariants = () => {
    try {
        // Read the generated CSS file
        const possiblePaths = [
            path.resolve(process.cwd(), "dist/styles/moon-core.css"),
            path.resolve(process.cwd(), "dist/moon-core.css"),
            path.resolve(process.cwd(), "moon-core.css")
        ];
        let cssFilePath = "";
        for (const filePath of possiblePaths) {
            if (fs.existsSync(filePath)) {
                cssFilePath = filePath;
                break;
            }
        }
        if (!cssFilePath) {
            console.warn("⚠️  moon-core.css not found. Run build first.");
            return ["fill", "soft", "outline", "ghost"]; // fallback
        }
        const cssContent = fs.readFileSync(cssFilePath, "utf8");
        // Extract button variant names using regex
        const buttonVariantRegex = /--button-([a-z-]+)-background:/g;
        const variants = new Set();
        let match;
        while ((match = buttonVariantRegex.exec(cssContent)) !== null) {
            const variantName = match[1];
            // Skip if it contains theme suffixes or other patterns
            if (!variantName.includes("-light") && !variantName.includes("-dark")) {
                variants.add(variantName);
            }
        }
        return Array.from(variants).sort();
    }
    catch (error) {
        console.error("❌ Error detecting button variants:", error);
        return ["fill", "soft", "outline", "ghost"]; // fallback
    }
};
/**
 * Generates Sass file with dynamic button variants
 */
const generateButtonVariantsSass = () => {
    try {
        const variants = generateButtonVariants();
        const sassContent = `// Auto-generated button variants
// This file is automatically generated by generateButtonVariants.ts
// Do not edit manually

$button-variants: (${variants.join(", ")});
`;
        const outputPath = path.resolve(process.cwd(), "src/components/_button-variants.scss");
        fs.writeFileSync(outputPath, sassContent);
        console.log(`✅ Generated button variants: ${variants.join(", ")}`);
        console.log(`📄 Saved to: ${outputPath}`);
        return variants;
    }
    catch (error) {
        console.error("❌ Error generating button variants Sass:", error);
        process.exit(1);
    }
};
// If running directly, execute the generation
if (import.meta.url === `file://${process.argv[1]}`) {
    generateButtonVariantsSass();
}
export { generateButtonVariants, generateButtonVariantsSass };
export default generateButtonVariants;
