@use "sass:map";
@use "variables";
@use "variants";
@use "utilities";

$sizes: ();
@each $size in variants.$linear-progress-sizes {
  $sizes: map.set(
    $sizes,
    $size,
    (
      "height": var(--spacing-height-#{utilities.get-size($size, "height")})
    )
  );
}

.moon-linear-progress {
  appearance: none;
  display: block;
  border-radius: var(--radius-9999);
  background-color: var(--component-linear-progress-track);
  width: 100%;
  height: map.get($sizes, "2xs", "height");
  position: relative;
  overflow: hidden;

  &::-webkit-progress-bar {
    background-color: var(--component-linear-progress-track);
  }

  &::-webkit-progress-value {
    border-radius: map.get($sizes, "2xs", "radius");
    background-color: var(--component-linear-progress-progress);
  }

  &::-moz-progress-bar {
    border-radius: map.get($sizes, "2xs", "radius");
    background-color: var(--component-linear-progress-progress);
  }

  @each $size, $prop in $sizes {
    @if â‰ˆ != "2xs" {
      &.moon-linear-progress-#{$size} {
        height: map.get($prop, "height");
      }
    }
  }
}

.moon-linear-progress-wrapper {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-space-2);

  :where(label) {
    font: var(--font-weight-medium) var(--style-text-md-font-size) / var(--style-text-md-line-height)
      var(--font-default);
    color: var(--color-text-primary);
    font-weight: var(--font-weight-medium);
    text-align: center;
  }
}
