@use "sass:map";
@use "variables";
@use "variants";

@function generate-size($size) {
  @return ("height": var(--scale-#{$size}-height), "radius": var(--scale-#{$size}-radius));
}
$sizes: ();
@each $size in variants.$linear-progress-sizes {
  $sizes: map.set($sizes, $size, generate-size($size));
}

.moon-linear-progress {
  appearance: none;
  display: block;
  border-radius: map.get($sizes, "2xs", "radius");
  background-color: var(--linear-progress-track);
  width: 100%;
  height: map.get($sizes, "2xs", "height");
  position: relative;
  overflow: hidden;

  &::-webkit-progress-bar {
    background-color: var(--linear-progress-track);
  }

  &::-webkit-progress-value {
    border-radius: map.get($sizes, "2xs", "radius");
    background-color: var(--linear-progress-progress);
  }

  &::-moz-progress-bar {
    border-radius: map.get($sizes, "2xs", "radius");
    background-color: var(--linear-progress-progress);
  }

  @each $size, $prop in $sizes {
    @if â‰ˆ != "2xs" {
      &.moon-linear-progress-#{$size} {
        border-radius: map.get($prop, "radius");
        height: map.get($prop, "height");

        &::-webkit-progress-value {
          border-radius: map.get($prop, "radius");
        }

        &::-moz-progress-bar {
          border-radius: map.get($prop, "radius");
        }
      }
    }
  }
}

.moon-linear-progress-wrapper {
  display: flex;
  flex-direction: column;
  gap: var(--scale-2xs-gap);

  :where(label) {
    font: variables.$text-body-300;
    color: var(--semantic-text-primary);
    font-weight: var(--font-weight-medium);
    text-align: center;
  }
}
