@use "sass:map";
@use "variables";
@use "variants";
@use "button";
@use "iconButton";

$variants: ();
@each $variant in variants.$alert-variants {
  $variants: map.set(
    $variants,
    $variant,
    (
      "color": var(--component-alert-#{$variant}-text),
      "background": var(--component-alert-#{$variant}-background),
      "shadow": inset 0 0 0 var(--component-alert-#{$variant}-stroke) var(--component-alert-#{$variant}-border),
      "icon": var(--component-alert-#{$variant}-icon)
    )
  );
}

.moon-alert {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  width: 100%;
  gap: var(--spacing-space-8);
  text-align: start;
  min-height: var(--spacing-space-56);
  padding: var(--spacing-space-12);
  border-radius: var(--component-alert-radius-radius);
  font: var(--font-weight-medium) var(--style-text-md-font-size) / var(--style-text-md-line-height) var(--font-default);
  color: map.get($variants, "fill", "color");
  background-color: map.get($variants, "fill", "background");
  box-shadow: map.get($variants, "fill", "shadow");

  :where(svg, .moon-icon) {
    color: map.get($variants, "fill", "icon");
    width: var(--spacing-space-20);
    height: var(--spacing-space-20);
  }

  :where(.moon-alert-meta) {
    margin-inline-start: auto;
    display: flex;
    align-items: center;
    gap: var(--spacing-space-8);
    color: var(--color-text-secondary);
  }

  :where(.moon-alert-content) {
    flex-basis: 100%;
  }

  :where(.moon-alert-action) {
    @extend .moon-button;
    @extend .moon-button-sm;
    @extend .moon-button-ghost;

    color: map.get($variants, "fill", "color");
    margin-inline-start: auto;

    :where(svg, .moon-icon) {
      color: map.get($variants, "fill", "icon");
    }
  }

  :where(.moon-alert-close) {
    @extend .moon-icon-button;
    @extend .moon-icon-button-sm;
    @extend .moon-icon-button-ghost;

    margin-inline-start: auto;

    :where(svg, .moon-icon) {
      color: map.get($variants, "fill", "icon");
    }
  }

  @each $variant, $prop in $variants {
    @if $variant != "fill" {
      &.moon-alert-#{$variant} {
        color: map.get($prop, "color");
        background-color: map.get($prop, "background");
        box-shadow: map.get($prop, "shadow");

        :where(svg, .moon-icon) {
          color: map.get($prop, "icon");
        }

        :where(.moon-alert-action) {
          color: map.get($prop, "color");

          :where(svg, .moon-icon) {
            color: map.get($prop, "icon");
          }
        }

        :where(.moon-alert-close) {
          :where(svg, .moon-icon) {
            color: map.get($prop, "icon");
          }
        }
      }
    }
  }
}

@each $context in variants.$contexts {
  .moon-alert-#{$context} {
    @each $variant in variants.$alert-variants {
      --component-alert-#{$variant}-text: var(--context-#{$context}-#{$variant}-text);
      --component-alert-#{$variant}-icon: var(--context-#{$context}-#{$variant}-icon);
      --component-alert-#{$variant}-background: var(--context-#{$context}-#{$variant}-background);
      --component-alert-#{$variant}-border: var(--context-#{$context}-#{$variant}-border);
    }
  }
}
