@use "sass:map";
@use "variables";
@use "variants";
@use "button";
@use "iconButton";

@mixin common {
  display: flex;
  align-items: center;
  width: 100%;
  gap: var(--sizing-gap-400);
}

$variants: ();
@each $variant in variants.$alert-variants {
  $variants: map.set(
    $variants,
    $variant,
    (
      "color": var(--component-alert-#{$variant}-text),
      "background": var(--component-alert-#{$variant}-background),
      "shadow": inset 0 0 0 var(--component-alert-#{$variant}-stroke) var(--component-alert-#{$variant}-border),
      "icon": var(--component-alert-#{$variant}-icon)
    )
  );
}

.moon-alert {
  @include common;

  text-align: start;
  min-height: var(--sizing-height-1000);
  padding: var(--sizing-padding-600);
  border-radius: var(--component-alert-radius);
  font: var(--style-font-weight-medium) var(--style-text-md-font-size) / var(--style-text-md-line-height)
    var(--style-font-family-default);
  color: map.get($variants, "fill", "color");
  background-color: map.get($variants, "fill", "background");
  box-shadow: map.get($variants, "fill", "shadow");

  &:has(.moon-alert-title-wrapper) {
    flex-direction: column;
  }

  :where(.moon-alert-title-wrapper) {
    @include common;

    font-weight: var(--style-font-weight-medium);
  }

  :where(svg, .moon-icon) {
    color: map.get($variants, "fill", "icon");
    width: var(--spacing-20);
    height: var(--spacing-20);
  }

  :where(.moon-alert-title) {
    flex-grow: 1;
    font-weight: var(--style-font-weight-medium);
  }

  :where(.moon-alert-content) {
    width: 100%;
    text-align: start;
  }

  :where(.moon-alert-action) {
    @extend .moon-button;
    @extend .moon-button-sm;
    @extend .moon-button-ghost;

    color: map.get($variants, "neutral", "color");

    :where(svg, .moon-icon) {
      color: map.get($variants, "neutral", "icon");
    }
  }

  :where(.moon-alert-dismiss) {
    @extend .moon-icon-button;
    @extend .moon-icon-button-sm;
    @extend .moon-icon-button-ghost;

    :where(svg, .moon-icon) {
      color: map.get($variants, "neutral", "icon");
    }
  }

  @each $variant, $prop in $variants {
    @if $variant != "fill" {
      &.moon-alert-#{$variant} {
        color: map.get($prop, "color");
        background-color: map.get($prop, "background");
        box-shadow: map.get($prop, "shadow");

        :where(svg, .moon-icon) {
          color: map.get($prop, "icon");
        }

        :where(.moon-alert-action) {
          color: map.get($prop, "color");

          :where(svg, .moon-icon) {
            color: map.get($prop, "icon");
          }
        }

        :where(.moon-alert-dismiss) {
          :where(svg, .moon-icon) {
            color: map.get($prop, "icon");
          }
        }
      }
    }
  }
}

@each $context in variants.$contexts {
  .moon-alert-#{$context} {
    @each $variant in variants.$alert-variants {
      --component-alert-#{$variant}-text: var(--context-#{$context}-#{$variant}-text);
      --component-alert-#{$variant}-icon: var(--context-#{$context}-#{$variant}-icon);
      --component-alert-#{$variant}-background: var(--context-#{$context}-#{$variant}-background);
      --component-alert-#{$variant}-border: var(--context-#{$context}-#{$variant}-border);
    }
  }
}
