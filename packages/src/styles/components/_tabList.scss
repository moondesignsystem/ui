@use "sass:map";
@use "variants";
@use "variables";

@function generate-size($size) {
  @return (
    "height": var(--scale-#{$size}-height),
    "width": var(--scale-#{$size}-width),
    "padding": 0 var(--scale-#{$size}-padding),
    "gap": var(--scale-#{$size}-gap),
    "radius": var(--scale-#{$size}-radius),
    "font": var(--scale-#{$size}-text-weight) var(--scale-#{$size}-text-size) / var(--scale-#{$size}-text-height)
      var(--scale-#{$size}-text-font),
    "icon-size": var(--scale-#{$size}-icon-size)
  );
}
$sizes: ();
@each $size in variants.$tab-list-sizes {
  $sizes: map.set($sizes, $size, generate-size($size));
}

.moon-tab-list {
  display: flex;

  .moon-tab {
    position: relative;
    overflow: hidden;
    display: inline-flex;
    height: map.get($sizes, "md", "height");
    min-width: map.get($sizes, "md", "width");
    cursor: pointer;
    user-select: none;
    appearance: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: var(--tab-list-tab-unselected-text);
    background-color: var(--tab-list-tab-unselected-background);
    padding: map.get($sizes, "md", "padding");
    gap: map.get($sizes, "md", "gap");
    border-top-left-radius: map.get($sizes, "md", "radius");
    border-top-right-radius: map.get($sizes, "md", "radius");
    border-bottom: var(--tab-list-tab-unselected-stroke) solid var(--tab-list-tab-unselected-border);
    font: map.get($sizes, "md", "font");
    font-weight: var(--font-weight-medium);

    :where(svg, .moon-icon) {
      width: map.get($sizes, "md", "icon-size");
      height: map.get($sizes, "md", "icon-size");
      color: var(--tab-list-tab-unselected-icon);
    }

    &.moon-tab-active {
      background-color: var(--tab-list-tab-selected-background);
      color: var(--tab-list-tab-selected-text);
      border-bottom: var(--tab-list-tab-selected-stroke) solid var(--tab-list-tab-selected-border);

      :where(svg, .moon-icon) {
        color: var(--tab-list-tab-selected-icon);
      }
    }

    &::after {
      content: "";
      position: absolute;
      display: block;
      inset: 0;
      transition: background-color 150ms ease-in-out;
      pointer-events: none;
      background-color: var(--semantic-background-transparent);
    }

    &:hover::after {
      background-color: var(--semantic-background-hover);
    }
  }

  @each $size, $prop in $sizes {
    @if $size != "md" {
      &.moon-tab-list-#{$size} {
        .moon-tab {
          height: map.get($prop, "height");
          min-width: map.get($prop, "width");
          padding: map.get($prop, "padding");
          gap: map.get($prop, "gap");
          border-top-left-radius: map.get($prop, "radius");
          border-top-right-radius: map.get($prop, "radius");
          font: map.get($prop, "font");

          :where(svg, .moon-icon) {
            width: map.get($prop, "icon-size");
            height: map.get($prop, "icon-size");
          }
        }
      }
    }
  }
}
