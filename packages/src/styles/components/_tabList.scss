@use "sass:map";
@use "variants";
@use "utilities";

$sizes: ();
@each $size in variants.$tab-list-sizes {
  $sizes: map.set(
    $sizes,
    $size,
    (
      "height": var(--sizing-height-#{utilities.get-size($size, "height")}),
      "width": var(--sizing-width-#{utilities.get-size($size, "width")}),
      "padding": 0 var(--sizing-padding-#{utilities.get-size($size, "padding")}),
      "gap": var(--sizing-gap-#{utilities.get-size($size, "gap")}),
      "radius": var(--component-tab-list-tab-radius-#{$size}),
      "font": var(--style-font-weight-medium)
        var(--style-text-#{utilities.get-size($size, "font")}-font-size) /
        var(--style-text-#{utilities.get-size($size, "font")}-line-height)
        var(--style-font-family-default),
      "icon-size": var(--sizing-height-#{utilities.get-size($size, "icon-size")})
    )
  );
}

.moon-tab-list {
  display: flex;
  border-bottom: var(--component-tab-list-track-stroke) solid var(--component-tab-list-track-border);

  .moon-tab {
    position: relative;
    overflow: hidden;
    display: inline-flex;
    height: map.get($sizes, "md", "height");
    min-width: map.get($sizes, "md", "width");
    cursor: pointer;
    user-select: none;
    appearance: none;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: var(--component-tab-list-tab-text-default);
    background-color: var(--component-tab-list-tab-background-default);
    padding: map.get($sizes, "md", "padding");
    gap: map.get($sizes, "md", "gap");
    border-top-left-radius: map.get($sizes, "md", "radius");
    border-top-right-radius: map.get($sizes, "md", "radius");
    border-bottom: var(--component-tab-list-tab-stroke-default) solid var(--component-tab-list-tab-border-default);
    font: map.get($sizes, "md", "font");
    font-weight: var(--style-font-weight-medium);

    :where(svg, .moon-icon) {
      width: map.get($sizes, "md", "icon-size");
      height: map.get($sizes, "md", "icon-size");
      color: var(--component-tab-list-tab-icon-default);
    }

    &.moon-tab-active {
      background-color: var(--component-tab-list-tab-background-selected);
      color: var(--component-tab-list-tab-text-selected);
      border-bottom: var(--component-tab-list-tab-stroke-selected) solid var(--component-tab-list-tab-border-selected);

      :where(svg, .moon-icon) {
        color: var(--component-tab-list-tab-icon-selected);
      }
    }

    &::after {
      content: "";
      position: absolute;
      display: block;
      inset: 0;
      transition: background-color 150ms ease-in-out;
      pointer-events: none;
      background-color: var(--color-background-transparent);
    }

    &:hover::after {
      background-color: var(--color-background-hover);
    }
  }

  @each $size, $prop in $sizes {
    @if $size != "md" {
      &.moon-tab-list-#{$size} {
        .moon-tab {
          height: map.get($prop, "height");
          min-width: map.get($prop, "width");
          padding: map.get($prop, "padding");
          gap: map.get($prop, "gap");
          border-top-left-radius: map.get($prop, "radius");
          border-top-right-radius: map.get($prop, "radius");
          font: map.get($prop, "font");

          :where(svg, .moon-icon) {
            width: map.get($prop, "icon-size");
            height: map.get($prop, "icon-size");
          }
        }
      }
    }
  }
}
