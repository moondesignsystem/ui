@use "sass:map";
@use "variants";
@use "utilities";

@mixin menu-sizes($size, $prop) {
  gap: map.get($prop, "gap");

  & > .moon-menu-item {
    height: map.get($prop, "height");
    font: map.get($prop, "font");
    gap: map.get($prop, "gap");
    padding: 0 map.get($prop, "padding");

    :where(svg, .moon-icon) {
      width: map.get($prop, "icon-size");
      height: map.get($prop, "icon-size");
    }
  }
}

$sizes: ();
@each $size in variants.$menu-sizes {
  $sizes: map.set(
    $sizes,
    $size,
    (
      "radius": var(--component-menu-radius-#{$size}),
      "height": var(--spacing-height-#{utilities.get-size($size, "height")}),
      "gap": var(--spacing-gap-#{utilities.get-size($size, "gap")}),
      "padding": var(--spacing-padding-#{utilities.get-size($size, "padding")}),
      "icon-size": var(--spacing-height-#{utilities.get-size($size, "icon-size")}),
      "font": var(--font-weight-medium)
        var(--style-text-#{utilities.get-size($size, "font")}-font-size) /
        var(--style-text-#{utilities.get-size($size, "font")}-line-height)
        var(--font-default)
    )
  );
}

.moon-menu {
  display: flex;
  width: 100%;
  flex-direction: column;
  gap: map.get($sizes, "md", "gap");

  & > .moon-menu-item {
    border-radius: map.get($sizes, "md", "radius");
    display: flex;
    align-items: center;
    gap: map.get($sizes, "md", "gap");
    padding: 0 map.get($sizes, "md", "padding");
    height: map.get($sizes, "md", "height");
    font: map.get($sizes, "md", "font");
    color: var(--component-list-text-default);
    background-color: var(--color-background-transparent);
    cursor: pointer;
    transition: background-color 150ms ease-in-out;

    &:hover {
      background-color: var(--color-background-hover);
    }

    :where(svg, .moon-icon) {
      width: map.get($sizes, "md", "icon-size");
      height: map.get($sizes, "md", "icon-size");
      color: var(--color-icon-primary);
    }

    :where(.moon-menu-item-meta) {
      margin-inline-start: auto;
      display: flex;
      align-items: center;
      gap: map.get($sizes, "md", "gap");
      color: var(--color-text-secondary);
    }
  }

  @each $size, $prop in $sizes {
    @if $size != "md" {
      &.moon-menu-#{$size} {
        @include menu-sizes($size, $prop);
      }
    }
  }
}
