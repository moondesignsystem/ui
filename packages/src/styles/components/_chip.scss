@use "sass:map";
@use "variables";
@use "variants";
@use "utilities";

$variants: ();
@each $variant in variants.$chip-variants {
  $variants: map.set(
    $variants,
    $variant,
    (
      "default-color": var(--component-chip-#{$variant}-text-default),
      "default-background": var(--component-chip-#{$variant}-background-default),
      "default-icon": var(--component-chip-#{$variant}-icon-default),
      "default-shadow": inset
        0
        0
        0
        var(--component-chip-#{$variant}-stroke-default)
        var(--component-chip-#{$variant}-border-default),
      "active-color": var(--component-chip-#{$variant}-text-active),
      "active-background": var(--component-chip-#{$variant}-background-active),
      "active-icon": var(--component-chip-#{$variant}-icon-active),
      "active-shadow": inset
        0
        0
        0
        var(--component-chip-#{$variant}-stroke-active)
        var(--component-chip-#{$variant}-border-active)
    )
  );
}

$sizes: ();
@each $size in variants.$chip-sizes {
  $sizes: map.set(
    $sizes,
    $size,
    (
      "height": var(--spacing-height-#{utilities.get-size($size, "height")}),
      "padding": var(--spacing-padding-#{utilities.get-size($size, "padding")}),
      "gap": var(--spacing-gap-#{utilities.get-size($size, "gap")}),
      "radius": var(--component-chip-radius-#{$size}),
      "font": var(--font-weight-medium)
        var(--style-text-#{utilities.get-size($size, "font")}-font-size) /
        var(--style-text-#{utilities.get-size($size, "font")}-line-height)
        var(--font-default),
      "icon-size": var(--spacing-height-#{utilities.get-size($size, "icon-size")})
    )
  );
}

.moon-chip {
  position: relative;
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  overflow: hidden;
  transition: box-shadow 150ms ease-in-out;
  height: map.get($sizes, "md", "height");
  padding: map.get($sizes, "md", "padding");
  column-gap: map.get($sizes, "md", "gap");
  color: map.get($variants, "fill", "default-color");
  font: map.get($sizes, "md", "font");
  border-radius: map.get($sizes, "md", "radius");
  box-shadow: map.get($variants, "fill", "default-shadow");
  background-color: map.get($variants, "fill", "default-background");

  &::after {
    content: "";
    position: absolute;
    display: block;
    inset: 0;
    transition: background-color 150ms ease-in-out;
    pointer-events: none;
    background-color: var(--color-background-transparent);
  }

  &:hover {
    box-shadow: inset 0 0 0 var(--spacing-space-2) var(--color-border-info);

    &::after {
      background-color: var(--color-background-hover);
    }
  }

  :where(svg, .moon-icon) {
    color: map.get($variants, "fill", "default-icon");
    width: map.get($sizes, "md", "icon-size");
    height: map.get($sizes, "md", "icon-size");
  }

  &:where(.moon-chip-active) {
    color: map.get($variants, "fill", "active-color");
    background-color: map.get($variants, "fill", "active-background");
    box-shadow: map.get($variants, "fill", "active-shadow");

    :where(svg, .moon-icon) {
      color: map.get($variants, "fill", "active-icon");
    }
  }

  @each $size, $prop in $sizes {
    @if $size != "md" {
      &.moon-chip-#{$size} {
        height: map.get($prop, "height");
        padding: map.get($prop, "padding");
        column-gap: map.get($prop, "gap");
        border-radius: map.get($prop, "radius");
        font: map.get($prop, "font");

        :where(svg, .moon-icon) {
          width: map.get($prop, "icon-size");
          height: map.get($prop, "icon-size");
        }
      }
    }
  }

  @each $variant, $prop in $variants {
    @if $variant != "fill" {
      &.moon-chip-#{$variant} {
        color: map.get($prop, "default-color");
        background-color: map.get($prop, "default-background");
        box-shadow: map.get($prop, "default-shadow");

        :where(svg, .moon-icon) {
          color: map.get($prop, "default-icon");
        }

        &:where(.moon-chip-active) {
          color: map.get($prop, "active-color");
          background-color: map.get($prop, "active-background");
          box-shadow: map.get($prop, "active-shadow");

          :where(svg, .moon-icon) {
            color: map.get($prop, "active-icon");
          }
        }
      }
    }
  }
}
