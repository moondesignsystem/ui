@use "sass:map";
@use "variables";
@use "variants";
@use "utilities";

@function generate-size($size) {
  @return (
    "height": var(--sizing-height-#{utilities.get-size($size, "height")}),
    "padding": 0 var(--sizing-padding-#{utilities.get-size($size, "padding")}),
    "gap": var(--sizing-height-#{utilities.get-size($size, "height")}),
    "radius": var(--component-forms-radius-#{$size}),
    "font": var(--style-font-weight-medium) var(--style-text-#{utilities.get-size($size, "font")}-font-size) /
      var(--style-text-#{utilities.get-size($size, "font")}-line-height) var(--style-font-family-default),
    "icon-size": var(--sizing-icon-size-#{utilities.get-size($size, "icon-size")})
  );
}
$sizes: ();
@each $size in variants.$input-sizes {
  $sizes: map.set($sizes, $size, generate-size($size));
}

.moon-input {
  display: flex;
  width: 100%;
  outline: none;
  border-color: transparent;
  align-items: center;
  transition:
    box-shadow 150ms ease-in-out,
    opacity 150ms ease-in-out,
    background-color 150ms ease-in-out;
  height: map.get($sizes, "md", "height");
  padding: map.get($sizes, "md", "padding");
  border-radius: map.get($sizes, "md", "radius");
  font: map.get($sizes, "md", "font");
  box-shadow: inset 0 0 0 var(--component-input-outline-stroke) var(--component-input-outline-border);
  color: var(--component-input-outline-text-default);
  background-color: var(--component-input-outline-background);

  &::placeholder {
    color: var(--color-text-secondary);
  }

  &:read-only,
  &:disabled {
    cursor: not-allowed;
  }

  &:disabled {
    opacity: var(--style-opacity-disabled);
  }

  &:not(:read-only, :disabled):hover {
    box-shadow: inset 0 0 0 var(--spacing-2) var(--color-border-primary);
    background-color: var(--color-background-hover);
  }

  &:not(:read-only, :disabled):focus {
    box-shadow: inset 0 0 0 var(--spacing-2) var(--color-border-info);
  }

  :where(svg, .moon-icon) {
    color: var(--color-icon-primary);
    width: map.get($sizes, "md", "icon-size");
    height: map.get($sizes, "md", "icon-size");
  }

  @each $size, $prop in $sizes {
    @if $size != "md" {
      &.moon-input-#{$size} {
        height: map.get($prop, "height");
        padding: map.get($prop, "padding");
        column-gap: map.get($prop, "gap");
        border-radius: map.get($prop, "radius");
        font: map.get($prop, "font");

        :where(svg, .moon-icon) {
          width: map.get($prop, "icon-size");
          height: map.get($prop, "icon-size");
        }
      }
    }
  }

  &.moon-input-error {
    box-shadow: inset 0 0 0 var(--spacing-2) var(--color-border-negative);

    &:hover,
    &:focus {
      box-shadow: inset 0 0 0 var(--spacing-2) var(--color-border-negative);
    }
  }
}
