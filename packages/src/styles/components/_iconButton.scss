@use "sass:map";
@use "variants";
@use "utilities";

$variants: ();
@each $variant in variants.$icon-button-variants {
  $variants: map.set(
    $variants,
    $variant,
    (
      "background": var(--component-icon-button-#{$variant}-background),
      "icon": var(--component-icon-button-#{$variant}-icon),
      "shadow": inset
        0
        0
        0
        var(--component-icon-button-#{$variant}-stroke)
        var(--component-icon-button-#{$variant}-border)
    )
  );
}

$sizes: ();
@each $size in variants.$button-sizes {
  $sizes: map.set(
    $sizes,
    $size,
    (
      "height": var(--sizing-height-#{utilities.get-size($size, "height")}),
      "width": var(--sizing-width-#{utilities.get-size($size, "width")}),
      "radius": var(--component-button-radius-#{$size}),
      "icon-size": var(--sizing-height-#{utilities.get-size($size, "icon-size")})
    )
  );
}

.moon-icon-button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  overflow: hidden;
  transition:
    opacity 150ms ease-in-out,
    transform 150ms ease-in-out;
  height: map.get($sizes, "md", "height");
  width: map.get($sizes, "md", "width");
  background-color: map.get($variants, "fill", "background");
  border-radius: map.get($sizes, "md", "radius");

  :where(svg, .moon-icon) {
    color: map.get($variants, "fill", "icon");
    width: map.get($sizes, "md", "icon-size");
    height: map.get($sizes, "md", "icon-size");
  }

  &::after {
    content: "";
    position: absolute;
    display: block;
    inset: 0;
    transition: background-color 150ms ease-in-out;
    pointer-events: none;
    background-color: var(--color-background-transparent);
  }

  &:disabled,
  &[aria-disabled="true"] {
    cursor: not-allowed;
    opacity: var(--style-opacity-disabled);
  }

  &:active {
    transform: scale(0.95);
  }

  &:not(:disabled):not([aria-disabled="true"]):hover::after {
    background-color: var(--color-background-hover);
  }

  @each $size, $prop in $sizes {
    @if $size != "md" {
      &.moon-icon-button-#{$size} {
        height: map.get($prop, "height");
        width: map.get($prop, "width");
        border-radius: map.get($prop, "radius");

        :where(svg, .moon-icon) {
          width: map.get($prop, "icon-size");
          height: map.get($prop, "icon-size");
        }
      }
    }
  }

  @each $variant, $prop in $variants {
    @if $variant != "fill" {
      &.moon-icon-button-#{$variant} {
        background-color: map.get($prop, "background");
        box-shadow: map.get($prop, "shadow");

        :where(svg, .moon-icon) {
          color: map.get($prop, "icon");
        }
      }
    }
  }
}

@each $context in variants.$contexts {
  .moon-icon-button-#{$context} {
    @each $variant in variants.$icon-button-variants {
      --component-icon-button-#{$variant}-icon: var(--context-#{$context}-#{$variant}-icon);
      --component-icon-button-#{$variant}-background: var(--context-#{$context}-#{$variant}-background);
      --component-icon-button-#{$variant}-border: var(--context-#{$context}-#{$variant}-border);
    }
  }
}
