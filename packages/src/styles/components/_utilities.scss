@use "sass:map";
@use "variables";

.moon-form-hint {
  font: var(--font-weight-medium) var(--style-text-sm-font-size) / var(--style-text-sm-line-height) var(--font-default);
  color: var(--color-text-secondary);
}

.moon-form-group-error {
  :where(.moon-form-hint) {
    color: var(--color-text-negative);
  }

  :where(input, textarea, select) {
    box-shadow: inset 0 0 0 var(--spacing-stroke-1) var(--color-border-negative);

    &:hover,
    &:focus {
      box-shadow: inset 0 0 0 var(--spacing-stroke-1) var(--color-border-negative);
    }
  }
}

.moon-form-group {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: var(--spacing-space-8);
  opacity: 1;

  :where(label) {
    font: var(--font-weight-medium) var(--style-text-md-font-size) / var(--style-text-md-line-height)
      var(--font-default);
    color: var(--color-text-primary);
  }

  :where(.required) {
    color: var(--color-text-negative);
  }

  &:has(:disabled) label,
  &:has(:disabled) .moon-form-hint {
    opacity: var(--style-opacity-disabled);
  }
}

.moon-backdrop {
  display: grid;
  align-self: stretch;
  justify-self: stretch;
  color: transparent;
  grid-column-start: 1;
  grid-row-start: 1;
  z-index: -1;

  button {
    cursor: pointer;
  }
}

label:has(.moon-checkbox),
label:has(.moon-radio) {
  display: flex;
  width: fit-content;
  gap: var(--spacing-space-8);
  align-items: center;
  font: var(--font-weight-medium) var(--style-text-md-font-size) / var(--style-text-md-line-height) var(--font-default);
  color: var(--color-text-primary);
  cursor: pointer;

  &:has(.moon-checkbox:disabled),
  &:has(.moon-radio:disabled) {
    cursor: not-allowed;
    opacity: var(--style-opacity-disabled);
  }
}

@function get-size($size, $property) {
  $size-map: (
    "5xs": (
      "height": 4,
      "width": 4,
      "padding": 4,
      "gap": 2,
      "icon-size": 10,
      "font": "2xs"
    ),
    "4xs": (
      "height": 8,
      "width": 8,
      "padding": 4,
      "gap": 2,
      "icon-size": 10,
      "font": "2xs"
    ),
    "3xs": (
      "height": 10,
      "width": 10,
      "padding": 4,
      "gap": 2,
      "icon-size": 10,
      "font": "2xs"
    ),
    "2xs": (
      "height": 16,
      "width": 16,
      "padding": 4,
      "gap": 2,
      "icon-size": 10,
      "font": "2xs"
    ),
    "xs": (
      "height": 24,
      "width": 24,
      "padding": 6,
      "gap": 4,
      "icon-size": 12,
      "font": "sm"
    ),
    "sm": (
      "height": 32,
      "width": 32,
      "padding": 8,
      "gap": 6,
      "icon-size": 16,
      "font": "md"
    ),
    "md": (
      "height": 40,
      "width": 40,
      "padding": 10,
      "gap": 8,
      "icon-size": 20,
      "font": "md"
    ),
    "lg": (
      "height": 48,
      "width": 48,
      "padding": 12,
      "gap": 8,
      "icon-size": 20,
      "font": "md"
    ),
    "xl": (
      "height": 56,
      "width": 56,
      "padding": 16,
      "gap": 12,
      "icon-size": 20,
      "font": "lg"
    ),
    "2xl": (
      "height": 64,
      "width": 64,
      "padding": 16,
      "gap": 12,
      "icon-size": 20,
      "font": "lg"
    )
  );

  @if map.has-key($size-map, $size) and map.has-key(map.get($size-map, $size), $property) {
    @return map.get($size-map, $size, $property);
  } @else {
    @error "Size '#{$size}' or property '#{$property}' not found in size-map";
  }
}
