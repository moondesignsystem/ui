name: Docs release

on:
  push:
    branches:
      - main

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IMAGE: ""
  ROBOT_NAME: ${{ github.actor }}
  ROBOT_EMAIL: ${{ github.actor }}@heathmont.net

jobs:
  build-and-push:
    runs-on: ubuntu-24.04
    outputs:
      image: ${{ steps.get_version.outputs.TAG_VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history to get tags
      - name: Get and increment version
        id: get_version
        run: |
          # Get the latest tag, if any
          LATEST_TAG=$(git tag --sort=-version:refname | head -n 1 || echo "")
          
          if [ -z "$LATEST_TAG" ]; then
            # No tags exist, start with 1.0.0
            NEW_VERSION="1.0.0"
          else
            # Parse the latest tag and increment patch version
            # Remove 'v' prefix if it exists
            CLEAN_TAG=${LATEST_TAG#v}
            
            # Split version into major.minor.patch
            IFS='.' read -ra VERSION_PARTS <<< "$CLEAN_TAG"
            MAJOR=${VERSION_PARTS[0]}
            MINOR=${VERSION_PARTS[1]}
            PATCH=${VERSION_PARTS[2]}
            
            # Increment patch version
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
          fi
          
          echo "Previous version: $LATEST_TAG"
          echo "New version: v$NEW_VERSION"
          echo "TAG_VERSION=v$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Create and push the new tag
          git config user.name "${{ env.ROBOT_NAME }}"
          git config user.email "${{ env.ROBOT_EMAIL }}"
          git tag "v$NEW_VERSION"
          git push origin "v$NEW_VERSION"
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.18.0
      - name: Install dependencies
        run: npm install
      - name: Build Moon UI package
        run: npm run build --workspace packages
      - name: Generate latest CSS files
        run: node packages/dist/install.js --add-components
        env:
          FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docs/Dockerfile
          push: true
          tags: heathmont/${{github.event.repository.name}}:${{ steps.get_version.outputs.TAG_VERSION }}
          build-args: |
            HEX_API_KEY=${{ secrets.HEX_ORGANIZATION_COINGAMING_KEY }}
            SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}

  deployment:
    name: Update Docker Compose, Create Manifest, and Deploy
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Stacks Repo
        uses: actions/checkout@v4
        with:
          repository: coingaming/stacks
          token: ${{ secrets.GH_TOKEN }}
          ref: sportsbet-t2
          path: stacks

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Prepare variables
        run: |
          echo "IMAGE=heathmont/${{github.event.repository.name}}:${{ needs.build-and-push.outputs.image }}" >> $GITHUB_ENV

      - name: Check Image variable
        run: echo "IMAGE=${{env.IMAGE}}"

      - name: Update Docker Compose with New Image
        working-directory: stacks
        run: |
          yq -i '.services.moon-ui-docs.image = "${{ env.IMAGE }}"' docker-compose.moon.yml

      - name: Commit and Push Changes to docker-compose file
        working-directory: stacks
        run: |
          git config user.email "${{ env.ROBOT_EMAIL }}"
          git config user.name "${{ env.ROBOT_NAME }}"
          git commit -am "Updated Docker image to ${{ env.IMAGE }}"
          git push origin sportsbet-t2
